import React, { useState, useContext } from "react";
import "./Profile.css";
import { Button, Input, Select } from "@/components/ui";
import { EventContext } from "../context/eventcontext.jsx";
import { useNavigate } from "react-router-dom";

const interests = ["‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ï", "‡∏Å‡∏µ‡∏¨‡∏≤", "‡πÄ‡∏û‡∏•‡∏á", "‡∏®‡∏¥‡∏•‡∏õ‡∏¥‡∏ô"];

const Profile = () => {
  const userName = localStorage.getItem("userName");
  const userPhoto = localStorage.getItem("userPhoto");

  const navigate = useNavigate();
  const { setEvents } = useContext(EventContext);

  const [formData, setFormData] = useState({
    interest: "",
    location: "",
    date: "",
    budget: "",
  });

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setUserInfo({ ...userInfo, [name]: value });
  };

  const toggleEdit = () => {
    setEditing(!editing);
  };

  const [editing, setEditing] = useState(false);
  const [userInfo, setUserInfo] = useState({
    detail: "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à...",
    description: "‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ö‡∏ö‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏ô‡πà‡∏≤‡∏£‡∏π‡πâ...",
    extra: "‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏≠‡∏∑‡πà‡∏ô ‡πÜ ‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏™‡∏ô‡πÉ‡∏à‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°...",
  });

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const amazonResponse = await fetch(
        "http://localhost:8080/api/scrape-amazon"
      );
      const amazonData = await amazonResponse.json();
      console.log("‚ú® ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Amazon:", amazonData);

      const payload = {
        userData: formData,
        amazonData: amazonData,
      };

      const makeResponse = await fetch(
        "http://localhost:8080/api/send-to-make-combined",
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(payload),
        }
      );

      console.log("‚úÖ ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å Make.com:", await makeResponse.json());

      // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á Context
      setEvents([amazonData]);

      // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏õ Home
      navigate("/home");
    } catch (error) {
      console.error("üö® ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:", error);
    }
  };

  // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ login ‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏´‡∏°
  if (!userName || !userPhoto) {
    return (
      <div className="container-profile">
        <div className="text-center mt-8">
          <h2 className="text-xl font-semibold">
            ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
          </h2>
          <Button className="mt-4" onClick={() => navigate("/login")}>
            ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
          </Button>
        </div>
      </div>
    );
  }

  if (editing) {
    localStorage.setItem("userInfo", JSON.stringify(userInfo));
  }
  

  return (
    <div className="container-profile">
      <div className="profile-container">
        {/* ‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å Google */}
        <img src={userPhoto} alt="Profile" className="profile-image" />
        <h2>{userName ? `üéâ Welcome, ${userName}` : "Profile Another"}</h2>

        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
        <div className="info-wrapper">
          <div className="mt-4">
            <Button onClick={toggleEdit}>
              {editing ? "üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å" : "‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"}
            </Button>
          </div>

          <div className="info-box">
            <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>
            {editing ? (
              <textarea
                name="detail"
                value={userInfo.detail}
                onChange={handleInputChange}
              />
            ) : (
              <p>{userInfo.detail}</p>
            )}
          </div>
          <div className="info-box">
            <h3>‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢</h3>
            {editing ? (
              <textarea
                name="description"
                value={userInfo.description}
                onChange={handleInputChange}
              />
            ) : (
              <p>{userInfo.description}</p>
            )}
          </div>
          <div className="info-box">
            <h3>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h3>
            {editing ? (
              <textarea
                name="extra"
                value={userInfo.extra}
                onChange={handleInputChange}
              />
            ) : (
              <p>{userInfo.extra}</p>
            )}
          </div>
        </div>

        {/* ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° */}
        {/* <div className="form-section mt-8 bg-white p-4 rounded-xl shadow-md">
          <form onSubmit={handleSubmit}>
            <Select name="interest" onChange={handleChange} required>
              <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ô‡πÉ‡∏à</option>
              {interests.map((item) => (
                <option key={item} value={item}>
                  {item}
                </option>
              ))}
            </Select>
            <Input
              name="location"
              placeholder="‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î"
              onChange={handleChange}
              required
            />
            <Input type="date" name="date" onChange={handleChange} required />
            <Input
              name="budget"
              type="number"
              placeholder="‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì"
              onChange={handleChange}
              required
            />
            <Button type="submit" className="mt-4 w-full">
              üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
            </Button>
          </form>
        </div> */}
      </div>
    </div>
  );
};

export default Profile;
