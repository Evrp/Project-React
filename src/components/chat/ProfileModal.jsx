import React, { useEffect } from 'react';
import { toast } from "react-toastify";
import './ProfileModal.css';

/**
 * ProfileModal - ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö modal
 * @param {Object} props - Props ‡∏Ç‡∏≠‡∏á component
 * @param {boolean} props.isOpen - ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡∏¥‡∏î/‡∏õ‡∏¥‡∏î modal
 * @param {function} props.onClose - ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î modal
 * @param {Object} props.user - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 * @returns {React.Component} ProfileModal component
 */
const ProfileModal = ({ isOpen, onClose, user, userimage }) => {
    if (!isOpen || !user) return null;

    // Log ‡∏Ñ‡πà‡∏≤ user ‡πÄ‡∏û‡∏∑‡πà‡∏≠ debug
    useEffect(() => {
        if (isOpen && user) {
            console.log("ProfileModal user:", user);
            console.log("PhotoURL:", user.photoURL);
            console.log("Userimage:", userimage);
        }
    }, [isOpen, user]);

    const getHighResPhoto = (url) => {
        if (!url) return "/default-profile.png";

        try {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ URL ‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (typeof url === 'string' && url.includes('=s')) {
                // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á ...=s96-c ‡πÅ‡∏•‡∏∞ ...=s96-c&... ‡∏´‡∏£‡∏∑‡∏≠ ...=s96-c?... (‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ query string ‡∏ï‡πà‡∏≠‡∏ó‡πâ‡∏≤‡∏¢)
                return url.replace(/=s\d+-c(?=[&?]|$)/, "=s400-c");
            }
            return url;
        } catch (error) {
            console.error('Error processing photo URL:', error);
            return url || "/default-profile.png";
        }
    };
    const deleteUser = async (roomId, roomName) => {
        if (!window.confirm("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?")) return;
        try {
            // ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
            await fetch(`${import.meta.env.VITE_APP_API_BASE_URL}/api/delete-event-match/${roomId}`, {
                method: "DELETE",
            });
            
            // ‡∏•‡∏ö‡∏à‡∏≤‡∏Å joined rooms ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï UI
            if (userimage?.updateJoinedRooms && roomName) {
                userimage.updateJoinedRooms(roomId, roomName);
            }
            
            // ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            toast.success("‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
            
            // ‡∏õ‡∏¥‡∏î modal
            onClose();
        } catch (error) {
            console.error('Error deleting user:', error);
            toast.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ");
        }
    };

    return (
        <div className="profile-modal-overlay" onClick={onClose}>
            <div className="profile-modal" onClick={(e) => e.stopPropagation()}>

                <div className="profile-modal-body">
                    <div className="profile-modal-user">
                        <img
                            src={getHighResPhoto(user.photoURL || userimage?.photoURL || "/default-profile.png")}
                            alt={user?.displayName || "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"}
                            className="profile-modal-avatar"
                        />
                        <div className="profile-modal-name">{user?.displayName || "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠"}</div>
                        <div className="profile-modal-email">{user?.email || ""}</div>
                    </div>
                    {userimage?.roomId && (
                        <button className='modal-profile' onClick={() => deleteUser(userimage.roomId, userimage.title)}>‡∏•‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô</button>
                    )}

                    {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) */}
                    {(user?.bio || user?.location || user?.education || user?.work) && (
                        <div className="profile-modal-info">
                            {user?.bio && (
                                <div className="profile-modal-info-item">
                                    <div className="profile-modal-info-label">‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö</div>
                                    <div className="profile-modal-info-value">{user.bio}</div>
                                </div>
                            )}

                            {user?.location && (
                                <div className="profile-modal-info-item">
                                    <div className="profile-modal-info-label">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</div>
                                    <div className="profile-modal-info-value">{user.location}</div>
                                </div>
                            )}

                            {user?.education && (
                                <div className="profile-modal-info-item">
                                    <div className="profile-modal-info-label">‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</div>
                                    <div className="profile-modal-info-value">{user.education}</div>
                                </div>
                            )}

                            {user?.work && (
                                <div className="profile-modal-info-item">
                                    <div className="profile-modal-info-label">‡∏≠‡∏≤‡∏ä‡∏µ‡∏û</div>
                                    <div className="profile-modal-info-value">{user.work}</div>
                                </div>
                            )}
                        </div>
                    )}

                    <div className="profile-modal-actions">
                        <button className="profile-modal-button primary">
                            <span className="emoji">üí¨</span>
                            ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default ProfileModal;
